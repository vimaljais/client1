{"version":3,"file":"little-state-machine.umd.js","sources":["../src/logic/storeFactory.ts","../src/constants.ts","../src/logic/getBrowserStoreData.ts","../src/StateMachineContext.tsx","../src/stateMachine.tsx"],"sourcesContent":["import { STORE_DEFAULT_NAME } from '../constants';\nimport getStoreData from './getBrowserStoreData';\nimport { MiddleWare, GlobalState } from '../types';\n\nclass StoreFactory {\n  public storageType: Storage;\n  public state: GlobalState = {};\n  public middleWares: MiddleWare[] = [];\n\n  constructor(public name = STORE_DEFAULT_NAME) {\n    try {\n      this.storageType =\n        typeof sessionStorage !== 'undefined'\n          ? window.sessionStorage\n          : ({} as Storage);\n    } catch {\n      this.storageType = {} as Storage;\n    }\n  }\n\n  updateStore(defaultValues: GlobalState) {\n    this.state = getStoreData(this.storageType, this.name) || defaultValues;\n  }\n\n  updateMiddleWares(middleWares: MiddleWare[]) {\n    return (this.middleWares = middleWares);\n  }\n}\n\nexport default new StoreFactory();\n","export const STORE_DEFAULT_NAME = '__LSM__';\nexport const STORE_ACTION_NAME = '__LSM_NAME__';\n","export default (storageType: Storage, storeName: string) => {\n  try {\n    return JSON.parse(storageType.getItem(storeName) as string);\n  } catch {\n    return null;\n  }\n};\n","import * as React from 'react';\nimport storeFactory from './logic/storeFactory';\nimport { StateMachineContextValue } from './types';\n\nconst StateMachineContext = React.createContext<StateMachineContextValue>(undefined as any);\n\nexport const StateMachineProvider: React.FC = ({ children }) => {\n  const [state, setState] = React.useState(storeFactory.state);\n\n  return (\n    <StateMachineContext.Provider\n      value={{ state, setState }}\n    >\n      { children }\n    </StateMachineContext.Provider>\n  );\n}\n\nexport function useStateMachineContext() {\n  const value = React.useContext<StateMachineContextValue>(StateMachineContext);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!value) {\n      console.error(`StateMachine context is undefined, please verify you are calling useStateMachine() as child of a <StateMachineProvider> component.`)\n    }\n  }\n\n  return value;\n}","import * as React from 'react';\nimport { useStateMachineContext } from './StateMachineContext';\nimport storeFactory from './logic/storeFactory';\nimport { setUpDevTools } from './logic/devTool';\nimport {\n  StateMachineOptions,\n  GlobalState,\n  AnyCallback,\n  AnyActions,\n  ActionsOutput,\n} from './types';\nimport { STORE_ACTION_NAME, STORE_DEFAULT_NAME } from './constants';\n\nexport function createStore(\n  defaultState: GlobalState,\n  options: StateMachineOptions = {\n    name: STORE_DEFAULT_NAME,\n    middleWares: [],\n  },\n) {\n  options.name && (storeFactory.name = options.name);\n  options.storageType && (storeFactory.storageType = options.storageType);\n  options.middleWares && storeFactory.updateMiddleWares(options.middleWares);\n\n  if (process.env.NODE_ENV !== 'production') {\n    setUpDevTools(\n      storeFactory.storageType,\n      storeFactory.name,\n      storeFactory.state,\n    );\n  }\n\n  storeFactory.updateStore(defaultState);\n}\n\nfunction actionTemplate<TCallback extends AnyCallback>(\n  setState: React.Dispatch<React.SetStateAction<GlobalState>>,\n  callback: TCallback,\n) {\n  return (payload: Parameters<TCallback>[1]) => {\n    if (process.env.NODE_ENV !== 'production') {\n      window[STORE_ACTION_NAME] = callback ? callback.name : '';\n    }\n\n    storeFactory.state = callback(storeFactory.state, payload);\n\n    storeFactory.storageType.setItem(\n      storeFactory.name,\n      JSON.stringify(storeFactory.state),\n    );\n\n    if (storeFactory.middleWares.length) {\n      storeFactory.state = storeFactory.middleWares.reduce(\n        (currentValue, currentFunction) =>\n          currentFunction(currentValue, callback.name, payload) || currentValue,\n        storeFactory.state,\n      );\n    }\n\n    setState(storeFactory.state);\n  };\n}\n\nexport function useStateMachine<\n  TCallback extends AnyCallback,\n  TActions extends AnyActions<TCallback>\n>(\n  actions?: TActions,\n): {\n  actions: ActionsOutput<TCallback, TActions>;\n  state: GlobalState;\n} {\n  const { state, setState } = useStateMachineContext();\n\n  return React.useMemo(\n    () => ({\n      actions: actions\n        ? Object.entries(actions).reduce(\n            (previous, [key, callback]) =>\n              Object.assign({}, previous, {\n                [key]: actionTemplate(setState, callback),\n              }),\n            {},\n          )\n        : ({} as any),\n      state,\n    }),\n    [state, setState, actions],\n  );\n}\n"],"names":["name","this","storageType","sessionStorage","window","updateStore","defaultValues","state","storeName","JSON","parse","getItem","getStoreData","updateMiddleWares","middleWares","StateMachineContext","React","undefined","children","storeFactory","Provider","value","setState","defaultState","options","actions","Object","entries","reduce","previous","assign","callback","payload","setItem","stringify","length","currentValue","currentFunction","actionTemplate"],"mappings":"0PASE,WAAmBA,YAAAA,IAAAA,ECTa,WDSbC,UAAAD,EAHZC,WAAqB,GACrBA,iBAA4B,GAGjC,IACEA,KAAKC,YACuB,oBAAnBC,eACHC,OAAOD,eACN,GACP,SACAF,KAAKC,YAAc,+BAIvBG,YAAA,SAAYC,GACVL,KAAKM,eErBOL,EAAsBM,GACpC,IACE,OAAOC,KAAKC,MAAMR,EAAYS,QAAQH,IACtC,SACA,aFiBaI,CAAaX,KAAKC,YAAaD,KAAKD,OAASM,KAG5DO,kBAAA,SAAkBC,GAChB,YAAaA,YAAcA,SGrBzBC,EAAsBC,qBAA8CC,0BAE5B,gBAAGC,IAAAA,WACrBF,WAAeG,EAAaZ,OAEtD,OACES,gBAACD,EAAoBK,UACnBC,MAAO,CAAEd,WAAOe,gBAEdJ,2BCCNK,EACAC,YAAAA,IAAAA,EAA+B,CAC7BxB,KHhB8B,UGiB9Bc,YAAa,KAGfU,EAAQxB,OAASmB,EAAanB,KAAOwB,EAAQxB,MAC7CwB,EAAQtB,cAAgBiB,EAAajB,YAAcsB,EAAQtB,aAC3DsB,EAAQV,aAAeK,EAAaN,kBAAkBW,EAAQV,aAE9DK,EAQad,YAAYkB,sBA+B3B,SAIEE,SDhDcT,aAA2CD,GCqDjDR,IAAAA,MAAOe,IAAAA,SAEf,OAAON,UACL,iBAAO,CACLS,QAASA,EACLC,OAAOC,QAAQF,GAASG,OACtB,SAACC,kBACCH,OAAOI,OAAO,GAAID,gBA5ChC,SACEP,EACAS,GAEA,gBAAQC,GACNb,EAIaZ,MAAQwB,EAASZ,EAAaZ,MAAOyB,GAElDb,EAAajB,YAAY+B,QACvBd,EAAanB,KACbS,KAAKyB,UAAUf,EAAaZ,QAG1BY,EAAaL,YAAYqB,SAC3BhB,EAAaZ,MAAQY,EAAaL,YAAYc,OAC5C,SAACQ,EAAcC,UACbA,EAAgBD,EAAcL,EAAS/B,KAAMgC,IAAYI,GAC3DjB,EAAaZ,QAIjBe,EAASH,EAAaZ,QAqBH+B,CAAehB,aAE1B,IAED,GACLf,MAAAA,IAEF,CAACA,EAAOe,EAAUG"}