{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useForm = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    options: \" \"\n  }); // const [errors, setErrors] = useState({});\n  // const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  }; // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   setErrors(validate(values));\n  //   setIsSubmitting(true);\n  // };\n  // useEffect(\n  //   () => {\n  //     if (Object.keys(errors).length === 0 && isSubmitting) {\n  //       callback();\n  //     }\n  //   },\n  //   [errors]\n  // );\n\n\n  return {\n    handleChange,\n    values\n  };\n};\n\n_s(useForm, \"UdzA6WNy6GuY8+KNGK2Wto97A/k=\");\n\nexport default useForm;","map":{"version":3,"sources":["/home/sourab/projects/frontend-demo/src/utils/useForm.js"],"names":["useState","useEffect","useForm","values","setValues","options","handleChange","e","name","value","target"],"mappings":";;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC;AACnCK,IAAAA,OAAO,EAAC;AAD2B,GAAD,CAApC,CADoB,CAIpB;AACA;;AAEA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAN,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACK,IAAD,GAAQC;AAFA,KAAD,CAAT;AAID,GAND,CAPoB,CAepB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAO;AAAEH,IAAAA,YAAF;AAAgBH,IAAAA;AAAhB,GAAP;AACD,CAhCD;;GAAMD,O;;AAkCN,eAAeA,OAAf","sourcesContent":["\nimport { useState, useEffect } from 'react';\n\nconst useForm = () => {\n  const [values, setValues] = useState({\n    options:\" \"\n  });\n  // const [errors, setErrors] = useState({});\n  // const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n\n  //   setErrors(validate(values));\n  //   setIsSubmitting(true);\n  // };\n\n  // useEffect(\n  //   () => {\n  //     if (Object.keys(errors).length === 0 && isSubmitting) {\n  //       callback();\n  //     }\n  //   },\n  //   [errors]\n  // );\n\n  return { handleChange, values};\n};\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}